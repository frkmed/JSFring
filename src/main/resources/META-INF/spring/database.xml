<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- Database -->
	<!-- Environment variable: DATABASE_URL -->
	<!-- Format: TODO://username:password@host:port/dbname -->
	<!-- Example (env=local): mysql://root:AZE123qsd@localhost:3306/dictionary -->
	<!-- Example (env=heroku): postgres://lveshvmnnklrze:v0hrZTKbqmS4PvwRKAQd9Q_L5f@ec2-184-73-165-195.compute-1.amazonaws.com:5432/d54utom7qlqe15 -->
	<bean class="java.net.URI" id="dbUrl">
		<constructor-arg value="#{systemEnvironment['DATABASE_URL']}" />
	</bean>
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- env=local: com.mysql.jdbc.Driver -->
		<!-- env=heroku: org.postgresql.Driver -->
		<property name="driverClassName"
			value="#{ @dbUrl.getScheme() == 'mysql' ? 'com.mysql.jdbc.Driver' : 'org.postgresql.Driver' }" />
		<property name="url"
			value="#{ 'jdbc:' + @dbUrl.getScheme() + '://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }" />
		<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }" />
		<property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }" />
	</bean>

	<!-- Hibernate -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.default_schema">dictionary</prop>
			</props>
		</property>
	</bean>

	<!-- Entity Manager -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="default" />
	</bean>

	<!-- Transaction Manager -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

</beans>