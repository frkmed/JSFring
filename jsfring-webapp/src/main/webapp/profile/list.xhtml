<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:p="http://primefaces.org/ui"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p62="http://java.sun.com/jsf/composite/pinguet62"
	template="/template/layout.xhtml">

	<ui:define name="content">
		<h:form>
			<p62:dataTable bean="#{profilesBean}" var="profile"
				createView="/profile/create.xhtml" showView="/profile/show.xhtml"
				updateView="/profile/update.xhtml" deletable="true"
				title="#{msg['page.profiles.title']}">

				<p:column headerText="#{msg['profile.title']}"
					filterBy="#{profile.title}" sortBy="#{profile.title}">
					<h:outputText value="#{profile.title}" />
				</p:column>

			</p62:dataTable>
		</h:form>

		<br />
		<p:tabView>
			<p:tab title="profiles.xhtml">
				<pre>
&lt;p62:dataTable
	bean=&quot;\#{profilesBean}&quot;
	lazy=&quot;false&quot;
	var=&quot;profile&quot;
	createView=&quot;create_update.xhtml&quot;
	showView=&quot;show.xhtml&quot;
	updateView=&quot;create_update.xhtml&quot;
	deletable=&quot;true&quot;
	title=&quot;\#{msg['page.profiles.title']}&quot;&gt;

	&lt;p:column headerText=&quot;...&quot; filterBy=&quot;\#{profile.title}&quot; sortBy=&quot;\#{profile.title}&quot;&gt;
		&lt;h:outputText value=&quot;\#{profile.title}&quot; /&gt;
	&lt;/p:column&gt;

&lt;/p62:dataTable&gt;
				</pre>
			</p:tab>
			<p:tab title="show.xhtml">
				<pre>
&lt;h:panelGrid columns=&quot;2&quot;&gt;
	&lt;p:outputLabel value=&quot;\#{msg['profile.title']}&quot; /&gt;
	&lt;h:outputText value=&quot;\#{bean.selectedValue.title}&quot; /&gt;

	&lt;p:outputLabel value=&quot;\#{msg['profile.rights']}&quot; /&gt;
	&lt;p:dataList value=&quot;\#{bean.selectedValue.rights}&quot; var=&quot;right&quot;&gt;
		&lt;f:facet name=&quot;header&quot;&gt;
			&lt;h:outputText value=&quot;\#{msg['pickList.target']}&quot; /&gt;
		&lt;/f:facet&gt;
		&lt;h:outputText value=&quot;\#{right.title}&quot; /&gt;
	&lt;/p:dataList&gt;
&lt;/h:panelGrid&gt;
				</pre>
			</p:tab>
			<p:tab title="create_update.xhtml">
				<pre>
&lt;h:panelGrid columns=&quot;2&quot;&gt;
	&lt;p:outputLabel value=&quot;\#{msg['profile.title']}&quot; /&gt;
	&lt;h:outputText value=&quot;\#{bean.selectedValue.title}&quot; /&gt;

	&lt;p:outputLabel value=&quot;\#{msg['profile.rights']}&quot; /&gt;
	&lt;p:pickList value=&quot;\#{bean.rightsAssociation}&quot; var=&quot;right&quot;
		itemValue=&quot;\#{right}&quot; itemLabel=&quot;\#{right.title}&quot;
		converter=&quot;\#{rightConverter}&quot;&gt;
		&lt;f:facet name=&quot;sourceCaption&quot;&gt;
			&lt;p:outputLabel value=&quot;\#{msg['pickList.source']}&quot; /&gt;
		&lt;/f:facet&gt;
		&lt;f:facet name=&quot;targetCaption&quot;&gt;
			&lt;p:outputLabel value=&quot;\#{msg['pickList.target']}&quot; /&gt;
		&lt;/f:facet&gt;
	&lt;/p:pickList&gt;
&lt;/h:panelGrid&gt;
				</pre>
			</p:tab>
			<p:tab title="ProfilesBeans.java">
				<pre>
@Named
@SpringViewScoped
public class ProfilesBean extends AbstractCrudBean&lt;Profile&gt; {

    @Inject
    private transient ProfileService profileService;

    @Inject
    private transient RightService rightService;

    private DualListModel&lt;Right&gt; rightsAssociation = new DualListModel&lt;Right&gt;(); // + getter/setter

    // Used by parent super-class
    @Override
    protected EntityPathBase&lt;Profile&gt; getBaseExpression() {
        return QProfile.profile;
    }

    // Used by parent super-class
    @Override
    public AbstractService&lt;Profile, ? extends Serializable&gt; getService() {
        return profileService;
    }

    // Used by parent super-class
    @Override
    protected Profile getNewValue() {
        return new Profile();
    }

    // Custom default behavior
    @Override
    public void create() {
        // Right association
        getSelectedValue().getRights().clear();
        getSelectedValue().getRights().addAll(rightsAssociation.getTarget());
		
        super.create();
    }

    // Custom default behavior
    @Override
    public void update() {
        // Right association
        getSelectedValue().getRights().clear();
        getSelectedValue().getRights().addAll(rightsAssociation.getTarget());

        super.update();
    }

    // Custom default behavior
    @Override
    public void setSelectedValue(Profile profile) {
        super.setSelectedValue(profile);

        // Right association
        List&lt;Right&gt; associatedRights = new ArrayList&lt;&gt;(getSelectedValue().getRights());
        List&lt;Right&gt; availableRights = rightService.getAll().stream().filter(right -&gt; !associatedRights.contains(right)).collect(toList());
        rightsAssociation = new DualListModel&lt;Right&gt;(availableRights, associatedRights);
    }

}
				</pre>
			</p:tab>
		</p:tabView>
	</ui:define>

</ui:composition>